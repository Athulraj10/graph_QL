Get Started with Apollo Client!

Ready to dive into Apollo Client? 
This quick tutorial will get you up and running smoothly.


Step 1: Setup
Begin by setting up a new React project locally with CodeSandbox or other.


Step 2: Install Dependencies
Install the required dependencies by running:

bash
Copy code
npm install @apollo/client graphql


Step 3: Initialize ApolloClient
In your main file (main.jsx), initialize ApolloClient with the necessary configuration:

javascript
Copy code
import { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';

const client = new ApolloClient({
  uri: 'https://flyby-router-demo.herokuapp.com/',
  cache: new InMemoryCache(),
});



Step 4: Connect to React
Connect Apollo Client to React using the ApolloProvider component:

javascript
Copy code
import React from 'react';
import ReactDOM from 'react-dom';
import { ApolloProvider } from '@apollo/client';
import App from './App';

ReactDOM.render(
  <ApolloProvider client={client}>
    <App />
  </ApolloProvider>,
  document.getElementById('root')
);



Step 5: Fetch Data with useQuery
Now, start fetching data using the useQuery hook:
javascript
Copy code
import { useQuery, gql } from '@apollo/client';

const GET_LOCATIONS = gql`
  query GetLocations {
    locations {
      id
      name
      description
      photo
    }
  }
`;

function DisplayLocations() {
  const { loading, error, data } = useQuery(GET_LOCATIONS);

  if (loading) return <p>Loading...</p>;
  if (error) return <p>Error : {error.message}</p>;

  return data.locations.map(({ id, name, description, photo }) => (
    <div key={id}>
      <h3>{name}</h3>
      <img width="400" height="250" alt="location-reference" src={`${photo}`} />
      <br />
      <b>About this location:</b>
      <p>{description}</p>
      <br />
    </div>
  ));
}
And integrate DisplayLocations into your component tree:

javascript
Copy code
export default function App() {
  return (
    <div>
      <h2>My first Apollo app </h2>
      <br/>
      <DisplayLocations />
    </div>
  );
}



Congratulations! You've successfully created your first component that renders with GraphQL data from Apollo Client! 
Explore more components using useQuery and experiment with these newfound concepts.
Keep workout on this Client I'll back with server Configuration